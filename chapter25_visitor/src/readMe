25.2 访问者模式的定义
访问者模式（Visitor Pattern）是一个相对简单的模式，其定义如下：Represent an
operation to be performed on the elements of an object structure. Visitor lets you define a new
operation without changing the classes of the elements on which it operates. （封装一些作用于某种
数据结构中的各元素的操作，它可以在不改变数据结构的前提下定义作用于这些元素的新的
操作。）


● Visitor——抽象访问者
抽象类或者接口，声明访问者可以访问哪些元素，具体到程序中就是visit方法的参数定
义哪些对象是可以被访问的。
● ConcreteVisitor——具体访问者
它影响访问者访问到一个类后该怎么干，要做什么事情。
● Element——抽象元素
接口或者抽象类，声明接受哪一类访问者访问，程序上是通过accept方法中的参数来定
义的。
● ConcreteElement——具体元素
实现accept方法，通常是visitor.visit(this)，基本上都形成了一种模式了。
● ObjectStruture——结构对象
元素产生者，一般容纳在多个不同类、不同接口的容器，如List、Set、Map等，在项目
中，一般很少抽象出这个角色。
大家可以这样理解访问者模式，我作为一个访客（Visitor）到朋友家（Visited Class）去
拜访，朋友之间聊聊天，喝喝酒，再相互吹捧吹捧，炫耀炫耀，这都正常。聊天的时候，朋
友告诉我，他今年加官晋爵了，工资也涨了30%，准备再买套房子，那我就在心里盘算
（Visitor-self-method）“你这么有钱，我去年要借10万你都不借”，我根据朋友的信息，执行
了自己的一个方法